#!/bin/bash

# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This script runs the presubmit tests; it is started by prow for each PR.
# When running `--integration-tests`, use `K8S_CLUSTER_OVERRIDE` to point at your
# own cluster (a context in your kubeconfig), or the script will attempt to invoke
# boskos to obtain one of the knative testing clusters in GKE.

set -o xtrace

source $(dirname $0)/../vendor/github.com/knative/test-infra/scripts/presubmit-tests.sh

function build_tests() {
  header "Verifying code structure and contents"

  local result=0
  subheader "Checking that we can build the code successfully"
  go build -v ./... || result=1

  subheader "Checking autogenerated code is up-to-date"
  ./hack/verify-codegen.sh || result=1

  subheader "Checking for forbidden licenses"
  check_licenses ./cmd/* || result=1

  return ${result}
}

function unit_tests() {
  echo "Running unit tests"
  report_go_test ./...
}

function integration_tests() {
  echo "Running integration tests"

  # The logic to create resource names (which are used by kubetest) in `e2e-tests.sh` requires
  # that the variable `BUILD_NUMBER` be set, which is provided by Prow, so if we aren't running
  # this from Prow we need to provide our own.
  export BUILD_NUMBER=${BUILD_NUMBER:-$RANDOM}

  # Use knative test-infra scripts to make `fail-test` and `success` available.
  # which will output helpful information for debugging failures, and ensure test
  # results are made available.
  source $(dirname $0)/../vendor/github.com/knative/test-infra/scripts/e2e-tests.sh
  # Setup the cluster (if not using an existing cluster) and deploy the Pipeline CRD
  source $(dirname $0)/cluster-setup.sh

  options=""
  (( EMIT_METRICS )) && options="-emitmetrics"
  report_go_test \
    -v -tags=e2e -count=1 -timeout=20m ./test \
    ${options} || fail_test

  success
}

main $@
